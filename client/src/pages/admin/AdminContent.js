"use client";
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { Search, Edit, Trash2, Plus, Filter } from "lucide-react";
import Button from "../../components/ui/Button";
const AdminContent = () => {
    const [content, setContent] = useState([]);
    const [searchTerm, setSearchTerm] = useState("");
    const [selectedType, setSelectedType] = useState("all");
    const [selectedCategory, setSelectedCategory] = useState("all");
    const [selectedStatus, setSelectedStatus] = useState("all");
    // Filter content based on search term, type, category, and status
    const filteredContent = content.filter((item) => {
        const matchesSearch = item.title.toLowerCase().includes(searchTerm.toLowerCase());
        const matchesType = selectedType === "all" || item.type === selectedType;
        const matchesCategory = selectedCategory === "all" || item.category === selectedCategory;
        const matchesStatus = selectedStatus === "all" || item.status === selectedStatus;
        return matchesSearch && matchesType && matchesCategory && matchesStatus;
    });
    const handleDeleteContent = (contentId) => {
        if (window.confirm("Are you sure you want to delete this content?")) {
            setContent(content.filter((item) => item.id !== contentId));
        }
    };
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex flex-col sm:flex-row sm:items-center sm:justify-between", children: [_jsx("h2", { className: "text-2xl font-bold mb-4 sm:mb-0", children: "Content Management" }), _jsxs(Button, { className: "flex items-center", children: [_jsx(Plus, { className: "mr-2 h-4 w-4" }), "Create New Content"] })] }), _jsx("div", { className: "bg-white rounded-lg shadow p-4", children: _jsxs("div", { className: "flex flex-col md:flex-row md:items-center md:space-x-4", children: [_jsxs("div", { className: "relative flex-grow mb-4 md:mb-0", children: [_jsx("div", { className: "absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none", children: _jsx(Search, { className: "h-5 w-5 text-gray-400" }) }), _jsx("input", { type: "text", placeholder: "Search content...", className: "pl-10 pr-4 py-2 border border-gray-300 rounded-md w-full focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent", value: searchTerm, onChange: (e) => setSearchTerm(e.target.value) })] }), _jsxs("div", { className: "flex flex-col sm:flex-row sm:space-x-4 space-y-4 sm:space-y-0", children: [_jsxs("div", { className: "relative", children: [_jsx("div", { className: "absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none", children: _jsx(Filter, { className: "h-5 w-5 text-gray-400" }) }), _jsxs("select", { className: "pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent", value: selectedType, onChange: (e) => setSelectedType(e.target.value), children: [_jsx("option", { value: "all", children: "All Types" }), _jsx("option", { value: "educational", children: "Educational" }), _jsx("option", { value: "motivational", children: "Motivational" })] })] }), _jsxs("div", { className: "relative", children: [_jsx("div", { className: "absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none", children: _jsx(Filter, { className: "h-5 w-5 text-gray-400" }) }), _jsxs("select", { className: "pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent", value: selectedCategory, onChange: (e) => setSelectedCategory(e.target.value), children: [_jsx("option", { value: "all", children: "All Categories" }), _jsx("option", { value: "fitness", children: "Fitness" }), _jsx("option", { value: "nutrition", children: "Nutrition" }), _jsx("option", { value: "success-story", children: "Success Story" }), _jsx("option", { value: "mindset", children: "Mindset" })] })] }), _jsxs("div", { className: "relative", children: [_jsx("div", { className: "absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none", children: _jsx(Filter, { className: "h-5 w-5 text-gray-400" }) }), _jsxs("select", { className: "pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent", value: selectedStatus, onChange: (e) => setSelectedStatus(e.target.value), children: [_jsx("option", { value: "all", children: "All Status" }), _jsx("option", { value: "published", children: "Published" }), _jsx("option", { value: "draft", children: "Draft" })] })] })] })] }) }), _jsxs("div", { className: "bg-white rounded-lg shadow overflow-hidden", children: [_jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "min-w-full divide-y divide-gray-200", children: [_jsx("thead", { className: "bg-gray-50", children: _jsxs("tr", { children: [_jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Title" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Type" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Category" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Author" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Published Date" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Status" }), _jsx("th", { scope: "col", className: "px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider", children: "Actions" })] }) }), _jsx("tbody", { className: "bg-white divide-y divide-gray-200", children: filteredContent.map((item) => (_jsxs("tr", { children: [_jsx("td", { className: "px-6 py-4 whitespace-nowrap", children: _jsx("div", { className: "text-sm font-medium text-gray-900", children: item.title }) }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap", children: _jsx("span", { className: `px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${item.type === "educational" ? "bg-blue-100 text-blue-800" : "bg-purple-100 text-purple-800"}`, children: item.type.charAt(0).toUpperCase() + item.type.slice(1) }) }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap", children: _jsx("span", { className: "px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-gray-100 text-gray-800", children: item.category
                                                        .split("-")
                                                        .map((word) => word.charAt(0).toUpperCase() + word.slice(1))
                                                        .join(" ") }) }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap text-sm text-gray-500", children: item.author }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap text-sm text-gray-500", children: item.publishedDate }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap", children: _jsx("span", { className: `px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${item.status === "published" ? "bg-green-100 text-green-800" : "bg-gray-100 text-gray-800"}`, children: item.status.charAt(0).toUpperCase() + item.status.slice(1) }) }), _jsx("td", { className: "px-6 py-4 whitespace-nowrap text-right text-sm font-medium", children: _jsxs("div", { className: "flex space-x-2", children: [_jsx("button", { className: "text-indigo-600 hover:text-indigo-900", children: _jsx(Edit, { className: "h-5 w-5" }) }), _jsx("button", { className: "text-red-600 hover:text-red-900", onClick: () => handleDeleteContent(item.id), children: _jsx(Trash2, { className: "h-5 w-5" }) })] }) })] }, item.id))) })] }) }), filteredContent.length === 0 && (_jsx("div", { className: "px-6 py-4 text-center text-gray-500", children: "No content found matching your criteria." }))] })] }));
};
export default AdminContent;
