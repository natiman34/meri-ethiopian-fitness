"use client";
import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState, useEffect } from "react";
import { useParams, Link, useSearchParams } from "react-router-dom";
import Card from "../../components/ui/Card";
import Button from "../../components/ui/Button";
import { useAuth } from "../../contexts/AuthContext";
import { FitnessPlanService } from "../../services/FitnessPlanService";
import { Loader2, AlertCircle } from "lucide-react";
import AnimatedGif from '../../components/AnimatedGif';
const FitnessPlanDetail = () => {
    const { id } = useParams();
    const [searchParams] = useSearchParams();
    const [plan, setPlan] = useState(null);
    const [isLoading, setIsLoading] = useState(true);
    const [error, setError] = useState(null);
    const [selectedDay, setSelectedDay] = useState(1);
    const { user } = useAuth();
    // Check if this is a newly created plan (hide sidebar elements)
    const hideActions = searchParams.get('hideActions') === 'true' || searchParams.get('preview') === 'true';
    console.log("FitnessPlanDetail mounted. ID from params:", id);
    useEffect(() => {
        const fetchPlan = async () => {
            console.log("Fetching plan for ID:", id);
            if (!id) {
                setError("Plan ID is missing.");
                setIsLoading(false);
                console.log("Error: Plan ID is missing.");
                return;
            }
            setIsLoading(true);
            setError(null);
            try {
                const fitnessPlanService = FitnessPlanService.getInstance();
                console.log("Calling getFitnessPlanById with ID:", id);
                const fetchedPlan = await fitnessPlanService.getFitnessPlanById(id);
                console.log("Fetched plan result:", fetchedPlan);
                if (fetchedPlan) {
                    setPlan(fetchedPlan);
                    if (fetchedPlan.schedule.length > 0) {
                        setSelectedDay(fetchedPlan.schedule[0].day);
                    }
                    console.log("Fetched plan successfully:", fetchedPlan);
                }
                else {
                    setError("Fitness plan not found.");
                    console.log("Error: Fitness plan not found for ID:", id);
                }
            }
            catch (err) {
                console.error("Failed to fetch fitness plan:", err);
                setError("Failed to load fitness plan. Please try again later.");
                console.log("Error fetching plan:", err);
            }
            finally {
                setIsLoading(false);
                console.log("Loading finished. IsLoading:", false);
            }
        };
        fetchPlan();
    }, [id]);
    console.log("Render Check: isLoading=", isLoading, ", error=", error, ", plan=", plan);
    if (isLoading) {
        return (_jsxs("div", { className: "pt-24 pb-16 min-h-screen flex items-center justify-center", children: [_jsx(Loader2, { className: "h-12 w-12 animate-spin text-green-500" }), _jsx("p", { className: "ml-4 text-xl text-gray-700", children: "Loading plan details..." })] }));
    }
    if (error) {
        return (_jsx("div", { className: "pt-24 pb-16 min-h-screen flex items-center justify-center", children: _jsxs("div", { className: "bg-red-100 border border-red-400 text-red-700 px-6 py-4 rounded-lg shadow-md flex items-center", children: [_jsx(AlertCircle, { className: "h-8 w-8 mr-3" }), _jsx("strong", { className: "font-bold mr-2", children: "Error:" }), _jsx("span", { className: "block sm:inline", children: error })] }) }));
    }
    if (!plan) {
        return (_jsx("div", { className: "pt-24 pb-16", children: _jsx("div", { className: "container mx-auto px-4", children: _jsx("h1", { className: "text-3xl font-bold text-red-600", children: "Plan not found" }) }) }));
    }
    const currentDaySchedule = plan.schedule.find(day => day.day === selectedDay);
    return (_jsxs("div", { className: "pt-24 pb-16", children: [_jsxs("div", { className: "relative h-[400px] mb-12", children: [_jsxs("div", { className: "absolute inset-0", children: [_jsx("img", { src: plan.image_url || "/images/placeholders/plan-hero.jpg", alt: plan.title, className: "w-full h-full object-cover" }), _jsx("div", { className: "absolute inset-0 bg-black bg-opacity-50" })] }), _jsx("div", { className: "relative h-full flex items-center", children: _jsx("div", { className: "container mx-auto px-4", children: _jsxs("div", { className: "max-w-3xl", children: [_jsxs("span", { className: `inline-block mb-4 text-xs font-semibold px-3 py-1 rounded-full ${plan.level === 'beginner'
                                            ? 'bg-green-100 text-green-800'
                                            : plan.level === 'intermediate'
                                                ? 'bg-yellow-100 text-yellow-800'
                                                : 'bg-red-100 text-red-800'}`, children: [plan.level.charAt(0).toUpperCase() + plan.level.slice(1), " Level"] }), _jsx("h1", { className: "text-4xl md:text-5xl font-bold text-white mb-4", children: plan.title }), !hideActions && (_jsxs("div", { className: "flex flex-wrap gap-4 mb-6", children: [_jsxs("div", { className: "bg-black/20 backdrop-blur-sm rounded-lg px-4 py-2", children: [_jsx("span", { className: "text-sm text-gray-300", children: "Duration" }), _jsxs("p", { className: "font-semibold text-white", children: [plan.duration, " Weeks"] })] }), _jsxs("div", { className: "bg-black/20 backdrop-blur-sm rounded-lg px-4 py-2", children: [_jsx("span", { className: "text-sm text-gray-300", children: "Weekly Sessions" }), _jsxs("p", { className: "font-semibold text-white", children: [plan.weekly_workouts, " Days"] })] }), _jsxs("div", { className: "bg-black/20 backdrop-blur-sm rounded-lg px-4 py-2", children: [_jsx("span", { className: "text-sm text-gray-300", children: "Difficulty" }), _jsxs("p", { className: "font-semibold text-white", children: [plan.difficulty, "/5"] })] })] })), _jsx("p", { className: "text-lg text-white whitespace-pre-wrap", children: plan.description })] }) }) })] }), _jsx("div", { className: "container mx-auto px-4", children: _jsxs("div", { className: `grid grid-cols-1 ${hideActions ? 'lg:grid-cols-1' : 'lg:grid-cols-3'} gap-8`, children: [!hideActions && (_jsx("div", { className: "lg:col-span-1", children: _jsxs("div", { className: "bg-white rounded-lg shadow-md p-6", children: [_jsx("h2", { className: "text-xl font-semibold mb-4", children: "Plan Overview" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("h3", { className: "font-medium text-gray-900", children: "Target Audience" }), _jsx("p", { className: "text-gray-600", children: plan.target_audience })] }), _jsxs("div", { children: [_jsx("h3", { className: "font-medium text-gray-900", children: "Prerequisites" }), _jsx("ul", { className: "list-disc list-inside text-gray-600", children: plan.prerequisites.map((prereq, index) => (_jsx("li", { children: prereq }, index))) })] }), _jsxs("div", { children: [_jsx("h3", { className: "font-medium text-gray-900", children: "Required Equipment" }), _jsx("div", { className: "flex flex-wrap gap-2 mt-2", children: plan.equipment.map((item, index) => (_jsx("span", { className: "px-3 py-1 bg-gray-100 text-gray-600 text-sm rounded-full", children: item }, index))) })] }), _jsxs("div", { children: [_jsx("h3", { className: "font-medium text-gray-900", children: "Goals" }), _jsx("div", { className: "flex flex-wrap gap-2 mt-2", children: plan.goals.map((goal, index) => (_jsx("span", { className: "px-3 py-1 bg-green-100 text-green-800 text-sm rounded-full", children: goal }, index))) })] }), plan.estimated_calories_burn && (_jsxs("div", { children: [_jsx("h3", { className: "font-medium text-gray-900", children: "Estimated Weekly Calories Burn" }), _jsxs("p", { className: "text-gray-600", children: [plan.estimated_calories_burn, " kcal"] })] }))] })] }) })), _jsx("div", { className: hideActions ? 'lg:col-span-1' : 'lg:col-span-2', children: _jsxs("div", { className: "bg-white rounded-lg shadow-md p-6", children: [_jsx("h2", { className: "text-xl font-semibold mb-6", children: "Workout Schedule" }), _jsx("div", { className: "flex flex-wrap gap-2 mb-6", children: plan.schedule.map((day) => (_jsxs("button", { onClick: () => setSelectedDay(day.day), className: `px-4 py-2 rounded-full text-sm font-semibold ${selectedDay === day.day
                                                ? 'bg-green-600 text-white'
                                                : day.restDay
                                                    ? 'bg-gray-100 text-gray-600'
                                                    : 'bg-gray-100 text-gray-800 hover:bg-gray-200'}`, children: ["Day ", day.day, " ", day.restDay ? '(Rest)' : ''] }, day.day))) }), currentDaySchedule && (_jsx("div", { children: currentDaySchedule.restDay ? (_jsxs("div", { className: "text-center py-12", children: [_jsx("h3", { className: "text-2xl font-semibold text-gray-900 mb-2", children: "Rest Day" }), _jsx("p", { className: "text-gray-600", children: "Take this day to recover and let your body heal." })] })) : (_jsx("div", { className: "space-y-6", children: currentDaySchedule.exercises.map((exercise, index) => (_jsx("div", { className: "border rounded-lg p-6", children: _jsxs("div", { className: "flex flex-col md:flex-row gap-6", children: [_jsx("div", { className: "md:w-1/3", children: _jsx(AnimatedGif, { src: exercise.gifUrl || "/images/placeholders/exercise-gif.gif", alt: exercise.name, className: "w-full h-48 rounded-lg" }) }), _jsxs("div", { className: "md:w-2/3", children: [_jsx("h3", { className: "text-xl font-semibold mb-2", children: exercise.name }), _jsx("p", { className: "text-gray-600 mb-4", children: exercise.description }), _jsxs("div", { className: "grid grid-cols-2 gap-4 mb-4", children: [exercise.sets && (_jsxs("div", { children: [_jsx("span", { className: "text-sm text-gray-500", children: "Sets" }), _jsx("p", { className: "font-semibold", children: exercise.sets.length })] })), exercise.estimatedTime && (_jsxs("div", { children: [_jsx("span", { className: "text-sm text-gray-500", children: "Estimated Time" }), _jsxs("p", { className: "font-semibold", children: [exercise.estimatedTime, " mins"] })] })), exercise.targetMuscles && exercise.targetMuscles.length > 0 && (_jsxs("div", { children: [_jsx("span", { className: "text-sm text-gray-500", children: "Target Muscles" }), _jsx("div", { className: "flex flex-wrap gap-1 mt-1", children: exercise.targetMuscles.map((muscle, idx) => (_jsx("span", { className: "px-2 py-0.5 bg-gray-100 text-gray-600 text-xs rounded-full", children: muscle }, idx))) })] })), exercise.difficulty && (_jsxs("div", { children: [_jsx("span", { className: "text-sm text-gray-500", children: "Difficulty" }), _jsx("p", { className: "font-semibold", children: exercise.difficulty })] }))] }), exercise.steps && exercise.steps.length > 0 && (_jsxs("div", { children: [_jsx("h4", { className: "font-medium text-gray-900 mb-2", children: "Steps" }), _jsx("ol", { className: "list-decimal list-inside text-gray-600 space-y-1", children: exercise.steps.map((step, idx) => (_jsx("li", { children: step }, idx))) })] }))] })] }) }, exercise.id))) })) }))] }) })] }) }), !hideActions && (_jsx("div", { children: _jsxs("div", { className: "space-y-6", children: [!user && (_jsx(Card, { children: _jsxs(Card.Body, { className: "text-center", children: [_jsx("h3", { className: "font-semibold text-lg mb-2", children: "Want to save this plan?" }), _jsx("p", { className: "text-gray-600 mb-4", children: "Create an account to save this plan to your profile." }), _jsx(Link, { to: "/register", children: _jsx(Button, { variant: "primary", fullWidth: true, children: "Sign Up Now" }) }), _jsxs("p", { className: "mt-4 text-sm text-gray-500", children: ["Already have an account? ", _jsx(Link, { to: "/login", className: "text-green-600", children: "Log in" })] })] }) })), _jsx(Card, { children: _jsxs(Card.Body, { children: [_jsx("h3", { className: "font-semibold text-lg mb-4", children: "Tips for Success" }), _jsxs("ul", { className: "space-y-3", children: [_jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Always warm up for 5-10 minutes before starting" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Stay hydrated throughout your workout" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Focus on proper form rather than speed" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Listen to your body and modify exercises if needed" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Don't skip rest days - they're essential for recovery" })] })] })] }) }), (plan.category === 'weight-loss' || plan.category === 'weight-gain') && (_jsx(Card, { children: _jsx(Card.Body, { children: plan.category === 'weight-loss' ? (_jsxs(_Fragment, { children: [_jsx("h3", { className: "font-semibold text-lg mb-4", children: "\uD83E\uDD58 Ethiopian Meal Plan for Weight Loss" }), _jsx("p", { className: "text-gray-700 mb-4", children: "The focus is on high-protein, fiber-rich, and balanced meals while controlling calorie intake." }), _jsx("h2", { className: "font-semibold text-lg mb-4", children: "\uD83C\uDF05 Breakfast (High Protein & Fiber)" }), _jsxs("ul", { className: "space-y-3", children: [_jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Kinche (Cracked wheat) + Low-fat yogurt" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Fetira (Ethiopian Crepe) with boiled eggs (without butter)" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Shiro Firfir (Chickpea stew with small Injera pieces)" })] })] }), _jsx("h2", { className: "font-semibold text-lg mb-4", children: "\uD83C\uDF5B Lunch (Protein & Healthy Carbs)" }), _jsxs("ul", { className: "space-y-3", children: [_jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Tibs (Lean beef or chicken) with lots of vegetables & small Injera" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Doro Wat (Spicy Chicken Stew) with brown rice" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Lentil Stew with Cabbage & Carrots" })] })] }), _jsx("h2", { className: "font-semibold text-lg mb-4", children: "\uD83C\uDF74 Snack (Healthy & Filling)" }), _jsxs("ul", { className: "space-y-3", children: [_jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Avocado & Lemon Juice (No sugar)" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Boiled Eggs & Roasted Chickpeas" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Atmit (Oatmeal with Cinnamon & No Sugar)" })] })] }), _jsx("h2", { className: "font-semibold text-lg mb-4", children: "\uD83E\uDD58 Dinner (Light & Nutritious)" }), _jsxs("ul", { className: "space-y-3", children: [_jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Gomen (Collard Greens) with a small portion of Tibs" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Shiro with a small Injera & side salad" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Firfir with Berbere & Tomato Sauce" })] })] }), _jsx("h2", { className: "font-semibold text-lg mb-4", children: "\uD83C\uDF79 Post-Workout (Low-Calorie Protein Boost)" }), _jsxs("ul", { className: "space-y-3", children: [_jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Greek Yogurt with Flaxseeds" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Smoothie with Spinach, Avocado, & Banana" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Boiled Sweet Potatoes & Lentils" })] })] }), _jsx("h2", { className: "font-semibold text-lg mb-4", children: "\uD83D\uDD25 Additional Tips for Weight Loss" }), _jsxs("ul", { className: "space-y-3", children: [_jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "\u2705 Calorie Deficit: Eat slightly fewer calories than you burn" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "\u2705 Protein Intake: At least 1.2-1.6g per kg of body weight" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "\u2705 Fiber-Rich Foods: More vegetables, lentils, and whole grains" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "\u2705 Healthy Fats: Use olive oil, nuts, and seeds" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "\u2705 Hydration: Drink at least 3-4L of water daily" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "\u2705 Sleep: Aim for 7-9 hours per night for fat loss" })] })] })] })) : (_jsxs(_Fragment, { children: [_jsx("h3", { className: "font-semibold text-lg mb-4", children: "\uD83E\uDD58 Ethiopian Meal Plan for Weight Gain" }), _jsx("p", { className: "text-gray-700 mb-4", children: "For optimal results with this fitness plan, consider these nutrition plans using Ethiopian foods:" }), _jsx("h2", { className: "font-semibold text-lg mb-4", children: "\uD83C\uDF05 Breakfast (High Protein & Healthy Fats)" }), _jsxs("ul", { className: "space-y-3", children: [_jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Kinche (Cracked wheat porridge) + Milk + Honey" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Scrambled Eggs with Kocho (False Banana Bread) & Avocado" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Fetira (Ethiopian Crepe) with Peanut Butter & Honey" })] })] }), _jsx("h2", { className: "font-semibold text-lg mb-4", children: "\uD83C\uDF5B Lunch (High Carb & Protein)" }), _jsxs("ul", { className: "space-y-3", children: [_jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Tibs (Beef or Lamb Stir-fry) with Injera & Gomen (Collard Greens)" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Shiro (Chickpea Stew) with Injera & Avocado" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Doro Wat (Spicy Chicken Stew) with Rice or Injera" })] })] }), _jsx("h2", { className: "font-semibold text-lg mb-4", children: "\uD83C\uDF74 Snack (High Calories & Protein)" }), _jsxs("ul", { className: "space-y-3", children: [_jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Roasted Chickpeas + Yogurt" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Atmit (Oatmeal with Milk & Honey)" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Peanut Butter & Banana Smoothie" })] })] }), _jsx("h2", { className: "font-semibold text-lg mb-4", children: "\uD83E\uDD58 Dinner (Balanced Meal)" }), _jsxs("ul", { className: "space-y-3", children: [_jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Firfir (Injera pieces soaked in spicy stew) with Eggs" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Gored Gored (Raw Beef Cubes) with Injera & Berbere Sauce" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Genfo (Barley Porridge) with Butter & Honey" })] })] }), _jsx("h2", { className: "font-semibold text-lg mb-4", children: "\uD83C\uDF79 Post-Workout (Protein & Carbs)" }), _jsxs("ul", { className: "space-y-3", children: [_jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Milk & Dates Smoothie" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Avocado Juice with Peanut Butter & Honey" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "Boiled Eggs & Roasted Sweet Potatoes" })] })] }), _jsx("h2", { className: "font-semibold text-lg mb-4", children: "\uD83D\uDD25 Additional Tips for Weight Gain" }), _jsxs("ul", { className: "space-y-3", children: [_jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "\u2705 Increase Calories: Eat more frequently (every 3-4 hours)" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "\u2705 Protein Intake: At least 1.6-2.2g per kg of body weight" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "\u2705 Healthy Fats: Add avocado, peanut butter, olive oil, and butter" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "\u2705 Hydration: Drink at least 3L of water daily" })] }), _jsxs("li", { className: "flex items-start", children: [_jsx("span", { className: "text-green-600 mr-2", children: "\u2022" }), _jsx("span", { className: "text-gray-700", children: "\u2705 Sleep: Aim for 7-9 hours per night for muscle recovery" })] })] })] })) }) }))] }) }))] }));
};
export default FitnessPlanDetail;
